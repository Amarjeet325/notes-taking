{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import{ToastContainer}from'react-toastify';import{handleError,handleSuccess}from'../../utils';import'./VerifyOtp.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function VerifyOtp(){var _location$state;const navigate=useNavigate();const location=useLocation();const[email,setEmail]=useState(((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.email)||localStorage.getItem('pendingEmail')||'');const[otp,setOtp]=useState('');useEffect(()=>{var _location$state2;if((_location$state2=location.state)!==null&&_location$state2!==void 0&&_location$state2.email){localStorage.setItem('pendingEmail',location.state.email);}},[location.state]);const handleVerify=async e=>{e.preventDefault();if(!otp){return handleError('Please enter the OTP');}try{const response=await fetch('http://localhost:4000/auth/verify-otp',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,otp})});const data=await response.json();if(!response.ok){throw new Error(data.message||'Verification failed');}if(data.success){handleSuccess('OTP verified successfully!');localStorage.setItem('token',data.jwtToken);localStorage.setItem('loggedInUser',data.name);localStorage.setItem('loggedInEmail',email);localStorage.removeItem('pendingEmail');// Navigate after success delay\nsetTimeout(()=>navigate('/dashboard'),1000);}else{handleError(data.message||'Invalid OTP.');}}catch(err){console.error('Verification error:',err);handleError(err.message||'Something went wrong.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"verify-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"verify-box\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"logo\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"span\",{className:\"brand\",children:\"HD\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Verify OTP\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Please enter the OTP sent to \",/*#__PURE__*/_jsx(\"strong\",{children:email})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleVerify,className:\"verify-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOtp(e.target.value),className:\"otp-input\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"verify-btn\",children:\"Verify\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"resend-text\",children:[\"Didn\\u2019t receive the OTP? \",/*#__PURE__*/_jsx(\"span\",{className:\"link\",children:\"Resend OTP\"})]})]}),/*#__PURE__*/_jsx(ToastContainer,{position:\"top-center\",autoClose:3000})]});}export default VerifyOtp;","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","ToastContainer","handleError","handleSuccess","jsx","_jsx","jsxs","_jsxs","VerifyOtp","_location$state","navigate","location","email","setEmail","state","localStorage","getItem","otp","setOtp","_location$state2","setItem","handleVerify","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","success","jwtToken","name","removeItem","setTimeout","err","console","error","className","children","onSubmit","type","placeholder","value","onChange","target","position","autoClose"],"sources":["/home/victus/Desktop/Notes_app/frontend/src/pages/VerifyOtp/VerifyOtp.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { handleError, handleSuccess } from '../../utils';\nimport './VerifyOtp.css';\n\nfunction VerifyOtp() {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [email, setEmail] = useState(location.state?.email || localStorage.getItem('pendingEmail') || '');\n    const [otp, setOtp] = useState('');\n\n    useEffect(() => {\n        if (location.state?.email) {\n            localStorage.setItem('pendingEmail', location.state.email);\n        }\n    }, [location.state]);\n\n    const handleVerify = async (e) => {\n        e.preventDefault();\n\n        if (!otp) {\n            return handleError('Please enter the OTP');\n        }\n\n        try {\n            const response = await fetch('http://localhost:4000/auth/verify-otp', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ email, otp }),\n            });\n\n            const data = await response.json();\n\n            if (!response.ok) {\n                throw new Error(data.message || 'Verification failed');\n            }\n\n            if (data.success) {\n                handleSuccess('OTP verified successfully!');\n                localStorage.setItem('token', data.jwtToken);\n                localStorage.setItem('loggedInUser', data.name);\n                localStorage.setItem('loggedInEmail', email);\n                localStorage.removeItem('pendingEmail');\n\n                // Navigate after success delay\n                setTimeout(() => navigate('/dashboard'), 1000);\n            } else {\n                handleError(data.message || 'Invalid OTP.');\n            }\n        } catch (err) {\n            console.error('Verification error:', err);\n            handleError(err.message || 'Something went wrong.');\n        }\n    };\n\n    return (\n        <div className=\"verify-container\">\n            <div className=\"verify-box\">\n                <div className=\"logo\">\n                    <div className=\"spinner\" />\n                    <span className=\"brand\">HD</span>\n                </div>\n                <h2>Verify OTP</h2>\n                <p>Please enter the OTP sent to <strong>{email}</strong></p>\n                <form onSubmit={handleVerify} className=\"verify-form\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter OTP\"\n                        value={otp}\n                        onChange={(e) => setOtp(e.target.value)}\n                        className=\"otp-input\"\n                    />\n                    <button type=\"submit\" className=\"verify-btn\">Verify</button>\n                </form>\n                <p className=\"resend-text\">Didnâ€™t receive the OTP? <span className=\"link\">Resend OTP</span></p>\n            </div>\n            <ToastContainer position=\"top-center\" autoClose={3000} />\n        </div>\n    );\n}\n\nexport default VerifyOtp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}